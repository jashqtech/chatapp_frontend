{"ast":null,"code":"var _jsxFileName = \"C:\\\\QTECH\\\\SIGN IN WITH GOOGLE\\\\socket\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\n// Connect to the backend. Make sure the URL/port is correct.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000\");\n\n// Hardcoded users for simple validation\nconst validUsers = [{\n  username: \"alice\",\n  password: \"123\"\n}, {\n  username: \"bob\",\n  password: \"123\"\n}, {\n  username: \"charlie\",\n  password: \"123\"\n}];\nfunction App() {\n  _s();\n  // Authentication states\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loginError, setLoginError] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // Chat states\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n\n  // This list contains all users except the logged in user\n  const availableUsers = validUsers.filter(u => u.username !== username).map(u => u.username);\n\n  // Handle incoming private messages\n  useEffect(() => {\n    socket.on(\"private_message\", data => {\n      // data contains sender, receiver and message properties.\n      // We update the chat log to display incoming messages.\n      setChatLog(prevLog => [...prevLog, `${data.sender} to you: ${data.message}`]);\n    });\n    socket.on(\"error_message\", data => {\n      setChatLog(prevLog => [...prevLog, `Error: ${data.error}`]);\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socket.off(\"private_message\");\n      socket.off(\"error_message\");\n    };\n  }, []);\n\n  // Handler for login button\n  const handleLogin = e => {\n    e.preventDefault();\n    const user = validUsers.find(u => u.username === username && u.password === password);\n    if (user) {\n      setLoggedIn(true);\n      setLoginError(\"\");\n      // Register on the server so that the server knows the socket for this username\n      socket.emit(\"register\", username);\n    } else {\n      setLoginError(\"Invalid username or password\");\n    }\n  };\n\n  // Handler for sending a private message\n  const sendPrivateMessage = () => {\n    if (!selectedUser) {\n      alert(\"Select a user to message\");\n      return;\n    }\n    if (message.trim() === \"\") return;\n    const data = {\n      sender: username,\n      receiver: selectedUser,\n      message: message.trim()\n    };\n\n    // Emit to server for delivering private message\n    socket.emit(\"private_message\", data);\n    // Optionally, show the senderâ€™s own message locally\n    setChatLog(prev => [...prev, `You to ${selectedUser}: ${data.message}`]);\n    setMessage(\"\");\n  };\n\n  // Render the login form if not logged in\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Username:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render the chat UI if logged in\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a user to chat with:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), availableUsers.map(user => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedUser(user),\n        style: {\n          marginRight: \"0.5rem\",\n          backgroundColor: selectedUser === user ? \"lightblue\" : \"white\"\n        },\n        children: user\n      }, user, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat with \", selectedUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          height: \"300px\",\n          overflowY: \"scroll\",\n          padding: \"1rem\",\n          marginBottom: \"1rem\"\n        },\n        children: chatLog.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendPrivateMessage(),\n        placeholder: \"Type a message\",\n        style: {\n          width: \"80%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendPrivateMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a user to start chatting.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BdDlAJEeQmUGlJ1J1vu0ipkEowc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","validUsers","username","password","App","_s","loggedIn","setLoggedIn","loginError","setLoginError","setUsername","setPassword","selectedUser","setSelectedUser","message","setMessage","chatLog","setChatLog","availableUsers","filter","u","map","on","data","prevLog","sender","error","off","handleLogin","e","preventDefault","user","find","emit","sendPrivateMessage","alert","trim","receiver","prev","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","color","marginBottom","onClick","marginRight","backgroundColor","border","height","overflowY","msg","index","onKeyDown","key","placeholder","width","_c","$RefreshReg$"],"sources":["C:/QTECH/SIGN IN WITH GOOGLE/socket/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\n// Connect to the backend. Make sure the URL/port is correct.\nconst socket = io(\"http://localhost:4000\");\n\n// Hardcoded users for simple validation\nconst validUsers = [\n  { username: \"alice\", password: \"123\" },\n  { username: \"bob\", password: \"123\" },\n  { username: \"charlie\", password: \"123\" }\n];\n\nfunction App() {\n  // Authentication states\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loginError, setLoginError] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // Chat states\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n\n  // This list contains all users except the logged in user\n  const availableUsers = validUsers\n    .filter((u) => u.username !== username)\n    .map(u => u.username);\n\n  // Handle incoming private messages\n  useEffect(() => {\n    socket.on(\"private_message\", (data) => {\n      // data contains sender, receiver and message properties.\n      // We update the chat log to display incoming messages.\n      setChatLog((prevLog) => [\n        ...prevLog,\n        `${data.sender} to you: ${data.message}`\n      ]);\n    });\n\n    socket.on(\"error_message\", (data) => {\n      setChatLog((prevLog) => [\n        ...prevLog,\n        `Error: ${data.error}`\n      ]);\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socket.off(\"private_message\");\n      socket.off(\"error_message\");\n    };\n  }, []);\n\n  // Handler for login button\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const user = validUsers.find(\n      (u) => u.username === username && u.password === password\n    );\n    if (user) {\n      setLoggedIn(true);\n      setLoginError(\"\");\n      // Register on the server so that the server knows the socket for this username\n      socket.emit(\"register\", username);\n    } else {\n      setLoginError(\"Invalid username or password\");\n    }\n  };\n\n  // Handler for sending a private message\n  const sendPrivateMessage = () => {\n    if (!selectedUser) {\n      alert(\"Select a user to message\");\n      return;\n    }\n    if (message.trim() === \"\") return;\n\n    const data = {\n      sender: username,\n      receiver: selectedUser,\n      message: message.trim()\n    };\n\n    // Emit to server for delivering private message\n    socket.emit(\"private_message\", data);\n    // Optionally, show the senderâ€™s own message locally\n    setChatLog((prev) => [\n      ...prev,\n      `You to ${selectedUser}: ${data.message}`\n    ]);\n    setMessage(\"\");\n  };\n\n  // Render the login form if not logged in\n  if (!loggedIn) {\n    return (\n      <div style={{ padding: \"2rem\" }}>\n        <h2>Login</h2>\n        <form onSubmit={handleLogin}>\n          <div>\n            <label>\n              Username:{\" \"}\n              <input\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Password:{\" \"}\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </label>\n          </div>\n          {loginError && <p style={{ color: \"red\" }}>{loginError}</p>}\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    );\n  }\n\n  // Render the chat UI if logged in\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      <h2>Welcome, {username}!</h2>\n      <div style={{ marginBottom: \"1rem\" }}>\n        <h3>Select a user to chat with:</h3>\n        {availableUsers.map((user) => (\n          <button\n            key={user}\n            onClick={() => setSelectedUser(user)}\n            style={{\n              marginRight: \"0.5rem\",\n              backgroundColor: selectedUser === user ? \"lightblue\" : \"white\"\n            }}\n          >\n            {user}\n          </button>\n        ))}\n      </div>\n      {selectedUser ? (\n        <div>\n          <h3>Chat with {selectedUser}</h3>\n          <div\n            style={{\n              border: \"1px solid #ccc\",\n              height: \"300px\",\n              overflowY: \"scroll\",\n              padding: \"1rem\",\n              marginBottom: \"1rem\"\n            }}\n          >\n            {chatLog.map((msg, index) => (\n              <p key={index}>{msg}</p>\n            ))}\n          </div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && sendPrivateMessage()}\n            placeholder=\"Type a message\"\n            style={{ width: \"80%\" }}\n          />\n          <button onClick={sendPrivateMessage}>Send</button>\n        </div>\n      ) : (\n        <p>Please select a user to start chatting.</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;;AAE1C;AACA,MAAMI,UAAU,GAAG,CACjB;EAAEC,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAM,CAAC,EACtC;EAAED,QAAQ,EAAE,KAAK;EAAEC,QAAQ,EAAE;AAAM,CAAC,EACpC;EAAED,QAAQ,EAAE,SAAS;EAAEC,QAAQ,EAAE;AAAM,CAAC,CACzC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,QAAQ,EAAEQ,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEQ,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMuB,cAAc,GAAGjB,UAAU,CAC9BkB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAClB,QAAQ,KAAKA,QAAQ,CAAC,CACtCmB,GAAG,CAACD,CAAC,IAAIA,CAAC,CAAClB,QAAQ,CAAC;;EAEvB;EACAN,SAAS,CAAC,MAAM;IACdI,MAAM,CAACsB,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACrC;MACA;MACAN,UAAU,CAAEO,OAAO,IAAK,CACtB,GAAGA,OAAO,EACV,GAAGD,IAAI,CAACE,MAAM,YAAYF,IAAI,CAACT,OAAO,EAAE,CACzC,CAAC;IACJ,CAAC,CAAC;IAEFd,MAAM,CAACsB,EAAE,CAAC,eAAe,EAAGC,IAAI,IAAK;MACnCN,UAAU,CAAEO,OAAO,IAAK,CACtB,GAAGA,OAAO,EACV,UAAUD,IAAI,CAACG,KAAK,EAAE,CACvB,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX1B,MAAM,CAAC2B,GAAG,CAAC,iBAAiB,CAAC;MAC7B3B,MAAM,CAAC2B,GAAG,CAAC,eAAe,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG9B,UAAU,CAAC+B,IAAI,CACzBZ,CAAC,IAAKA,CAAC,CAAClB,QAAQ,KAAKA,QAAQ,IAAIkB,CAAC,CAACjB,QAAQ,KAAKA,QACnD,CAAC;IACD,IAAI4B,IAAI,EAAE;MACRxB,WAAW,CAAC,IAAI,CAAC;MACjBE,aAAa,CAAC,EAAE,CAAC;MACjB;MACAT,MAAM,CAACiC,IAAI,CAAC,UAAU,EAAE/B,QAAQ,CAAC;IACnC,CAAC,MAAM;MACLO,aAAa,CAAC,8BAA8B,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAMyB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACtB,YAAY,EAAE;MACjBuB,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACF;IACA,IAAIrB,OAAO,CAACsB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE3B,MAAMb,IAAI,GAAG;MACXE,MAAM,EAAEvB,QAAQ;MAChBmC,QAAQ,EAAEzB,YAAY;MACtBE,OAAO,EAAEA,OAAO,CAACsB,IAAI,CAAC;IACxB,CAAC;;IAED;IACApC,MAAM,CAACiC,IAAI,CAAC,iBAAiB,EAAEV,IAAI,CAAC;IACpC;IACAN,UAAU,CAAEqB,IAAI,IAAK,CACnB,GAAGA,IAAI,EACP,UAAU1B,YAAY,KAAKW,IAAI,CAACT,OAAO,EAAE,CAC1C,CAAC;IACFC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;;EAED;EACA,IAAI,CAACT,QAAQ,EAAE;IACb,oBACEP,OAAA;MAAKwC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC9B1C,OAAA;QAAA0C,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd9C,OAAA;QAAM+C,QAAQ,EAAElB,WAAY;QAAAa,QAAA,gBAC1B1C,OAAA;UAAA0C,QAAA,eACE1C,OAAA;YAAA0C,QAAA,GAAO,WACI,EAAC,GAAG,eACb1C,OAAA;cACEgD,IAAI,EAAC,MAAM;cACXC,KAAK,EAAE9C,QAAS;cAChB+C,QAAQ,EAAGpB,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACqB,MAAM,CAACF,KAAK;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACN9C,OAAA;UAAA0C,QAAA,eACE1C,OAAA;YAAA0C,QAAA,GAAO,WACI,EAAC,GAAG,eACb1C,OAAA;cACEgD,IAAI,EAAC,UAAU;cACfC,KAAK,EAAE7C,QAAS;cAChB8C,QAAQ,EAAGpB,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACqB,MAAM,CAACF,KAAK;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACLrC,UAAU,iBAAIT,OAAA;UAAGwC,KAAK,EAAE;YAAEY,KAAK,EAAE;UAAM,CAAE;UAAAV,QAAA,EAAEjC;QAAU;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3D9C,OAAA;UAAQgD,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV;;EAEA;EACA,oBACE9C,OAAA;IAAKwC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B1C,OAAA;MAAA0C,QAAA,GAAI,WAAS,EAACvC,QAAQ,EAAC,GAAC;IAAA;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B9C,OAAA;MAAKwC,KAAK,EAAE;QAAEa,YAAY,EAAE;MAAO,CAAE;MAAAX,QAAA,gBACnC1C,OAAA;QAAA0C,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnC3B,cAAc,CAACG,GAAG,CAAEU,IAAI,iBACvBhC,OAAA;QAEEsD,OAAO,EAAEA,CAAA,KAAMxC,eAAe,CAACkB,IAAI,CAAE;QACrCQ,KAAK,EAAE;UACLe,WAAW,EAAE,QAAQ;UACrBC,eAAe,EAAE3C,YAAY,KAAKmB,IAAI,GAAG,WAAW,GAAG;QACzD,CAAE;QAAAU,QAAA,EAEDV;MAAI,GAPAA,IAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQH,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLjC,YAAY,gBACXb,OAAA;MAAA0C,QAAA,gBACE1C,OAAA;QAAA0C,QAAA,GAAI,YAAU,EAAC7B,YAAY;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjC9C,OAAA;QACEwC,KAAK,EAAE;UACLiB,MAAM,EAAE,gBAAgB;UACxBC,MAAM,EAAE,OAAO;UACfC,SAAS,EAAE,QAAQ;UACnBlB,OAAO,EAAE,MAAM;UACfY,YAAY,EAAE;QAChB,CAAE;QAAAX,QAAA,EAEDzB,OAAO,CAACK,GAAG,CAAC,CAACsC,GAAG,EAAEC,KAAK,kBACtB7D,OAAA;UAAA0C,QAAA,EAAgBkB;QAAG,GAAXC,KAAK;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9C,OAAA;QACEgD,IAAI,EAAC,MAAM;QACXC,KAAK,EAAElC,OAAQ;QACfmC,QAAQ,EAAGpB,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAC5Ca,SAAS,EAAGhC,CAAC,IAAKA,CAAC,CAACiC,GAAG,KAAK,OAAO,IAAI5B,kBAAkB,CAAC,CAAE;QAC5D6B,WAAW,EAAC,gBAAgB;QAC5BxB,KAAK,EAAE;UAAEyB,KAAK,EAAE;QAAM;MAAE;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACF9C,OAAA;QAAQsD,OAAO,EAAEnB,kBAAmB;QAAAO,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,gBAEN9C,OAAA;MAAA0C,QAAA,EAAG;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxC,EAAA,CArKQD,GAAG;AAAA6D,EAAA,GAAH7D,GAAG;AAuKZ,eAAeA,GAAG;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}